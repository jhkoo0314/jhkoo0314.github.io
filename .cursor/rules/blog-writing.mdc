---
alwaysApply: false
---
# 블로그 글 작성 규칙

이 규칙은 사용자가 주제를 입력하면 [pages/](mdc:pages/) 폴더의 기존 형식에 따라 블로그 글을 작성해주는 규칙입니다.

## 블로그 글 작성 프로세스

### 1. 주제 입력 시 자동 실행할 작업들

1. **최신 정보 수집**: Tavily MCP를 사용하여 주제와 관련된 최신 정보를 웹에서 수집
2. **기존 형식 분석**: [pages/](mdc:pages/) 폴더의 기존 마크다운 파일들을 참조하여 형식 파악
3. **블로그 글 생성**: 수집된 정보를 바탕으로 완성된 블로그 글 작성

### 2. 블로그 글 형식 (기존 파일들 기준)

#### Frontmatter 형식

```yaml
---
title: "블로그 글 제목"
date: YYYY-MM-DD
tags: ["태그1", "태그2", "태그3"]
category: "카테고리명"
description: "블로그 글 요약 설명"
---
```

#### 본문 구조

- **제목**: H1으로 메인 제목
- **소개**: 친근한 톤으로 주제 소개
- **본문**: 섹션별로 나누어 작성 (H2, H3 사용)
- **코드 블록**: 필요시 JavaScript, Python 등 코드 예시 포함
- **마무리**: 개인적 의견이나 결론
- **인용구**: 관련 명언이나 인사이트 포함

### 3. Tavily MCP 활용 방법

#### 정보 수집 전략

1. **주제 키워드 검색**: 주제와 관련된 핵심 키워드로 검색
2. **최신 뉴스 수집**: 최근 1주일 이내의 관련 뉴스 수집
3. **트렌드 분석**: 관련 분야의 최신 트렌드 파악
4. **전문가 의견**: 해당 분야 전문가들의 의견 수집

#### 검색 쿼리 예시

- `{주제} 최신 동향 2025`
- `{주제} 뉴스 최근`
- `{주제} 트렌드 분석`
- `{주제} 전문가 의견`

### 4. 글 작성 가이드라인

#### 톤앤매너

- **친근하고 접근하기 쉬운 톤** 사용
- **비개발자도 이해할 수 있는 설명** 제공
- **이모지 활용**으로 가독성 향상
- **개인적 경험이나 의견** 포함

#### 내용 구성

- **최신 정보 중심**: Tavily로 수집한 최신 정보를 우선적으로 활용
- **구체적인 사례**: 실제 사례나 데이터 포함
- **균형잡힌 시각**: 긍정적/부정적 측면 모두 다룸
- **실용적인 정보**: 독자에게 도움이 되는 실용적 내용 포함

#### 구조화

- **섹션별 구분**: 명확한 H2, H3 헤딩 사용
- **리스트 활용**: 가독성을 위한 불릿 포인트 사용
- **코드 블록**: 필요시 적절한 코드 예시 포함
- **인용구**: 관련 명언이나 인사이트로 마무리

### 5. 파일 저장 규칙

#### 파일명 규칙

- 형식: `{주제}-{날짜}.md`
- 예시: `ai-trends-2025-01-26.md`
- 특수문자는 하이픈(-)으로 대체

#### 저장 위치

- 파일은 반드시 [pages/](mdc:pages/) 폴더에 저장
- 기존 파일들과 동일한 형식으로 저장

### 6. 품질 관리

#### 필수 체크리스트

- [ ] Tavily MCP로 최신 정보 수집 완료
- [ ] Frontmatter 형식 올바르게 작성
- [ ] 본문 구조가 명확하게 구분됨
- [ ] 친근하고 이해하기 쉬운 톤 사용
- [ ] 최신 정보가 정확하게 반영됨
- [ ] 파일명이 규칙에 맞게 작성됨
- [ ] [pages/](mdc:pages/) 폴더에 올바르게 저장됨

#### 로그 남기기

블로그 글 작성 시 다음 로그를 남겨야 합니다:

- 정보 수집 과정 로그
- 글 작성 완료 로그
- 파일 저장 완료 로그

### 7. 사용 예시

사용자가 "AI 최신 동향"이라는 주제를 입력하면:

1. Tavily MCP로 "AI 최신 동향 2025", "AI 뉴스 최근" 등 검색
2. 수집된 정보를 바탕으로 블로그 글 작성
3. [pages/](mdc:pages/) 폴더의 기존 형식에 맞춰 작성
4. `ai-trends-2025-01-26.md` 파일명으로 저장
5. 작성 완료 로그 출력

이 규칙을 통해 사용자는 주제만 입력하면 자동으로 최신 정보가 반영된 고품질 블로그 글을 받을 수 있습니다.

### 8. 필수 사항

1. 블로그 글을 작성하고 나서 항상 `node .github/scripts/generate-posts.js`를 실행하여 posts.json 파일을 생성하세요.
2. 블로그 글이 완성되면 자동으로 git hub에 push하는 과정을 수행해